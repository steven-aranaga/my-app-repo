version: '3.8'

services:
  # Web frontend
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - WEB_HOST=0.0.0.0
      - WEB_PORT=3000
      - API_URL=http://api:8000
      - API_TOKEN=${API_TOKEN}
    depends_on:
      - api
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # API service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DATABASE_URL=sqlite:///app/data/app.db
      - API_TOKEN=${API_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      - BACKEND_URL=http://backend:5000
    volumes:
      - app-data:/app/data
    depends_on:
      - backend
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Python backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=sqlite:///app/data/app.db
      - LOG_LEVEL=info
      - LOG_FILE=/app/logs/backend.log
    volumes:
      - app-data:/app/data
      - app-logs:/app/logs
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Nginx server
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/static:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - api
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

networks:
  app-network:
    driver: bridge

volumes:
  app-data:
  app-logs:

